apiVersion: apps/v1
kind: Deployment
metadata:
  name: maily-ai-service
  namespace: maily-production
  labels:
    app: maily
    component: ai-service
    environment: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: maily
      component: ai-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: maily
        component: ai-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ai-service
        image: ghcr.io/maily/ai-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: maily-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: maily-secrets
              key: anthropic-api-key
        - name: GOOGLE_AI_API_KEY
          valueFrom:
            secretKeyRef:
              name: maily-secrets
              key: google-ai-key
        - name: REDIS_HOST
          value: "redis-master.maily-production.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: maily-secrets
              key: redis-password
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: maily-secrets
              key: database-url
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - name: ai-config
          mountPath: /app/config
      volumes:
      - name: ai-config
        configMap:
          name: ai-service-config
      serviceAccountName: maily-ai-service
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
---
# AI Service ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-service-config
  namespace: maily-production
data:
  octotools-config.json: |
    {
      "agents": {
        "email_composer": {
          "model": "gpt-4o",
          "provider": "openai",
          "system_prompt": "You are an expert email composer who creates high-quality, engaging emails.",
          "max_iterations": 5
        },
        "content_analyzer": {
          "model": "claude-3-sonnet-20240229",
          "provider": "anthropic",
          "system_prompt": "You are an expert content analyzer who helps identify key topics and sentiment in text.",
          "max_iterations": 3
        },
        "trust_verifier": {
          "model": "gpt-4o",
          "provider": "openai",
          "system_prompt": "You are a trust verification agent who validates email authenticity and blockchain verification.",
          "max_iterations": 2
        },
        "conversation_manager": {
          "model": "gemini-pro",
          "provider": "google",
          "system_prompt": "You are a conversation manager who helps maintain context and coherence in email threads.",
          "max_iterations": 3
        }
      },
      "workflows": {
        "email_creation": {
          "steps": [
            {"agent": "content_analyzer", "output": "content_analysis"},
            {"agent": "email_composer", "input": "content_analysis", "output": "email_draft"},
            {"agent": "trust_verifier", "input": "email_draft", "output": "verified_email"}
          ]
        },
        "email_response": {
          "steps": [
            {"agent": "conversation_manager", "output": "conversation_context"},
            {"agent": "content_analyzer", "input": "conversation_context", "output": "response_analysis"},
            {"agent": "email_composer", "input": "response_analysis", "output": "email_draft"},
            {"agent": "trust_verifier", "input": "email_draft", "output": "verified_response"}
          ]
        }
      }
    }
---
# AI Service Service
apiVersion: v1
kind: Service
metadata:
  name: maily-ai-service
  namespace: maily-production
  labels:
    app: maily
    component: ai-service
spec:
  selector:
    app: maily
    component: ai-service
  ports:
  - name: http
    port: 80
    targetPort: 8000
  type: ClusterIP
---
# Service Account for AI Service
apiVersion: v1
kind: ServiceAccount
metadata:
  name: maily-ai-service
  namespace: maily-production
---
# HPA for AI Service
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: maily-ai-service
  namespace: maily-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: maily-ai-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
