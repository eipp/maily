apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailydocs
  namespace: maily
  labels:
    app: mailydocs
    component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mailydocs
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: mailydocs
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: mailydocs
        image: ${ECR_REPOSITORY}/mailydocs:${VERSION}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: POSTGRES_DB
          value: "maily"
        - name: POSTGRES_HOST
          value: "postgres.maily.svc.cluster.local"
        - name: POSTGRES_PORT
          value: "5432"
        - name: REDIS_HOST
          value: "redis.maily.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        - name: LOG_LEVEL
          value: "INFO"
        - name: DOCUMENT_STORAGE_PATH
          value: "/data/documents"
        - name: DOCUMENT_BASE_URL
          value: "/api/documents"
        - name: TEMP_DIRECTORY
          value: "/tmp/mailydocs"
        - name: BLOCKCHAIN_ENABLED
          value: "true"
        - name: BLOCKCHAIN_PROVIDER_URL
          valueFrom:
            secretKeyRef:
              name: blockchain-credentials
              key: provider_url
        - name: BLOCKCHAIN_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: blockchain-credentials
              key: private_key
        - name: BLOCKCHAIN_CONTRACT_ADDRESS
          valueFrom:
            secretKeyRef:
              name: blockchain-credentials
              key: contract_address
        - name: BLOCKCHAIN_NETWORK
          value: "mainnet"
        volumeMounts:
        - name: document-storage
          mountPath: /data/documents
        - name: temp-data
          mountPath: /tmp/mailydocs
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: document-storage
        persistentVolumeClaim:
          claimName: document-storage-pvc
      - name: temp-data
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: mailydocs
  namespace: maily
  labels:
    app: mailydocs
spec:
  selector:
    app: mailydocs
  ports:
  - port: 80
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: document-storage-pvc
  namespace: maily
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: efs-sc
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mailydocs-hpa
  namespace: maily
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mailydocs
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 60
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mailydocs-ingress
  namespace: maily
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "30m"
spec:
  tls:
  - hosts:
    - api.mailyapp.com
    secretName: maily-tls
  rules:
  - host: api.mailyapp.com
    http:
      paths:
      - path: /api/mailydocs
        pathType: Prefix
        backend:
          service:
            name: mailydocs
            port:
              number: 80
