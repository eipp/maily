# Global values for staging
global:
  environment: staging
  imageRegistry: docker.io/library
  imagePullSecrets: []
  storageClass: ""
  domain: staging.maily.ai
  
  # Istio Service Mesh Configuration for staging
  istio:
    enabled: true
    version: "1.19.3"
    gateway: "istio-system/maily-staging-gateway"
    mtls:
      mode: "STRICT"
      defaultMode: "PERMISSIVE"
    timeout:
      api: "20s"  # Slightly longer timeouts for staging
      ai: "45s"
      email: "30s"
      web: "15s"
    retries:
      api:
        attempts: 3
        perTryTimeout: "3s"
        retryOn: "connect-failure,refused-stream,gateway-error,5xx"
      ai:
        attempts: 3
        perTryTimeout: "10s"
        retryOn: "connect-failure,refused-stream,5xx"
      email:
        attempts: 3
        perTryTimeout: "5s"
        retryOn: "connect-failure,refused-stream,5xx"
    # Circuit breaker values can match production

# Skip Istio resources for now
skipIstio: true

# Global autoscaling configuration
autoscaling:
  enabled: false

# Frontend configuration
frontend:
  replicaCount: 1
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: false
  image:
    repository: nginx
    tag: latest
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

# Backend API configuration
backend:
  replicaCount: 1
  resources:
    limits:
      cpu: 500m
      memory: 768Mi
    requests:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: false
  image:
    repository: nginx
    tag: latest
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

# Worker configuration
worker:
  replicaCount: 1
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: false
  image:
    repository: nginx
    tag: latest

# PostgreSQL configuration
postgresql:
  enabled: true
  architecture: standalone
  primary:
    persistence:
      enabled: false
      storageClass: ""
      existingClaim: ""
      emptyDir: {}
  auth:
    database: maily
    username: postgres
    password: postgres
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi

# Redis configuration
redis:
  enabled: true
  architecture: standalone
  master:
    persistence:
      enabled: false
      storageClass: ""
      existingClaim: ""
      emptyDir: {}
  auth:
    enabled: true
    password: redis
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# RabbitMQ configuration
rabbitmq:
  enabled: true
  persistence:
    enabled: false
    storageClass: ""
    existingClaim: ""
    emptyDir: {}
  auth:
    username: rabbit
    password: rabbit
  resources:
    limits:
      cpu: 300m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

# Ingress configuration
ingress:
  hosts:
    - host: staging.justmaily.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
          port: 80
    - host: staging-app.justmaily.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
          port: 80
    - host: staging-api.justmaily.com
      paths:
        - path: /
          pathType: Prefix
          service: backend
          port: 80
    - host: staging-api-edge.justmaily.com
      paths:
        - path: /
          pathType: Prefix
          service: api-edge-caching
          port: 80
  tls:
    - secretName: maily-staging-tls
      hosts:
        - staging.justmaily.com
        - staging-app.justmaily.com
        - staging-api.justmaily.com
        - staging-api-edge.justmaily.com

# API Edge Caching configuration
apiEdgeCaching:
  enabled: false
  replicaCount: 1
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: false

# Security configuration
security:
  enabled: false
  waf:
    replicaCount: 1
    autoscaling:
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
  auditLogging:
    replicaCount: 1
  networkPolicies:
    enabled: false

# Monitoring configuration
monitoring:
  enabled: false
  elk:
    replicas: 1
    elasticsearch:
      heapSize: 512m
      resources:
        limits:
          cpu: 1000m
          memory: 1Gi
        requests:
          cpu: 200m
          memory: 512Mi
      persistence:
        enabled: false
        size: 10Gi
    logstash:
      heapSize: 256m
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
    kibana:
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
  prometheus:
    replicas: 1
    retention: 7d
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
    persistence:
      enabled: false
      size: 10Gi
  grafana:
    replicas: 1
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 64Mi
    persistence:
      enabled: false
      size: 2Gi

# Email Service configuration
emailService:
  enabled: false
  replicas: 1
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: false
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

# Email Processing Service configuration
emailProcessing:
  replicas: 1
  image:
    repository: nginx
    tag: latest
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

# Contact Management Service configuration
contactManagement:
  replicas: 1
  image:
    repository: nginx
    tag: latest
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

# Analytics Service configuration
analyticsService:
  enabled: false
  replicas: 1
  resources:
    limits:
      cpu: 300m
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: false
  image:
    repository: nginx
    tag: latest
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

# AI Service configuration
aiService:
  enabled: true
  replicas: 1
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  autoscaling:
    enabled: false
  memory:
    persistenceEnabled: false
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false

# AI Operations Configuration
aiOperations:
  enabled: false

# BackupRestore configuration
backupRestore:
  enabled: false