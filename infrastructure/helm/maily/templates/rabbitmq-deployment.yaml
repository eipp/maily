{{- if .Values.rabbitmq.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-rabbitmq
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-rabbitmq
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: message-queue
    app.kubernetes.io/part-of: maily
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-rabbitmq
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-rabbitmq
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: rabbitmq
          image: "{{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}"
          imagePullPolicy: {{ .Values.rabbitmq.image.pullPolicy }}
          ports:
            - name: amqp
              containerPort: 5672
              protocol: TCP
            - name: management
              containerPort: 15672
              protocol: TCP
          resources:
            {{- toYaml .Values.rabbitmq.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.rabbitmq.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: rabbitmq-password
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-rabbitmq
{{- end }}
