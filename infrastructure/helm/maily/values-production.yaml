# Maily Production Environment Configuration

global:
  environment: production
  domain: maily.io

image:
  repository: ghcr.io/maily/maily
  tag: v1.0.0
  pullPolicy: Always

replicaCount:
  api: 3
  frontend: 3
  worker: 3

resources:
  api:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  frontend:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  worker:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi

autoscaling:
  api:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  frontend:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  worker:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
  hosts:
    - host: maily.io
      paths:
        - path: /
          pathType: Prefix
    - host: www.maily.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: maily-prod-tls
      hosts:
        - maily.io
        - www.maily.io

database:
  host: ${DATABASE_HOST}
  port: 5432
  name: maily
  user: ${DATABASE_USER}
  existingSecret: maily-secrets
  existingSecretPasswordKey: postgres-password

redis:
  host: ${REDIS_HOST}
  port: 6379
  existingSecret: maily-secrets
  existingSecretPasswordKey: redis-password

rabbitmq:
  host: ${RABBITMQ_HOST}
  port: 5672
  user: ${RABBITMQ_USER}
  existingSecret: maily-secrets
  existingSecretPasswordKey: rabbitmq-password

ai:
  enabled: true
  providers:
    - name: openai
      enabled: true
      existingSecret: maily-secrets
      existingSecretKeyKey: openai-api-key
    - name: anthropic
      enabled: true
      existingSecret: maily-secrets
      existingSecretKeyKey: anthropic-api-key
    - name: google
      enabled: true
      existingSecret: maily-secrets
      existingSecretKeyKey: google-api-key

monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
  prometheusRule:
    enabled: true
  grafanaDashboards:
    enabled: true

security:
  networkPolicies:
    enabled: true
  podSecurityPolicies:
    enabled: true
  securityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1000
  containerSecurityContext:
    enabled: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - maily-api
                - maily-frontend
                - maily-worker
        topologyKey: kubernetes.io/hostname
