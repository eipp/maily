apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-agent-injector
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-agent-injector
rules:
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-agent-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-agent-injector
subjects:
- kind: ServiceAccount
  name: vault-agent-injector
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-injector-cfg
  namespace: default
data:
  config.hcl: |
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config = {
          role = "vault-agent-injector"
        }
      }

      sink "file" {
        config = {
          path = "/home/vault/.vault-token"
        }
      }
    }

    template {
      destination = "/etc/vault/config.json"
      contents = <<EOH
      {
        "vault_addr": "http://vault.default.svc.cluster.local:8200",
        "vault_skip_verify": "true"
      }
      EOH
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-agent-injector
  namespace: default
  labels:
    app: vault-agent-injector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-agent-injector
  template:
    metadata:
      labels:
        app: vault-agent-injector
    spec:
      serviceAccountName: vault-agent-injector
      containers:
      - name: vault-agent-injector
        image: hashicorp/vault-k8s:1.2.0
        imagePullPolicy: IfNotPresent
        args:
          - agent-inject
          - -tls-auto=webhook
          - -log-level=info
          - -log-format=standard
        env:
          - name: AGENT_INJECT_LISTEN
            value: ":8080"
          - name: AGENT_INJECT_LOG_LEVEL
            value: info
          - name: AGENT_INJECT_VAULT_ADDR
            value: http://vault.default.svc.cluster.local:8200
          - name: AGENT_INJECT_VAULT_AUTH_PATH
            value: auth/kubernetes
          - name: AGENT_INJECT_VAULT_IMAGE
            value: vault:1.15.2
          - name: AGENT_INJECT_TLS_AUTO
            value: webhook
          - name: AGENT_INJECT_TLS_AUTO_HOSTS
            value: vault-agent-injector-svc,vault-agent-injector-svc.default,vault-agent-injector-svc.default.svc
        livenessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: vault-agent-injector-svc
  namespace: default
  labels:
    app: vault-agent-injector
spec:
  ports:
  - port: 443
    targetPort: 8080
  selector:
    app: vault-agent-injector
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: vault-agent-injector-cfg
  labels:
    app: vault-agent-injector
webhooks:
  - name: vault.hashicorp.com
    sideEffects: None
    admissionReviewVersions:
    - "v1beta1"
    - "v1"
    clientConfig:
      service:
        name: vault-agent-injector-svc
        namespace: default
        path: "/mutate"
      caBundle: "${CA_BUNDLE}"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    failurePolicy: Ignore
    namespaceSelector:
      matchLabels:
        vault-injection: enabled
