apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: monitoring
data:
  elasticsearch.yml: |
    cluster.name: maily-es-cluster
    node.name: ${HOSTNAME}
    path.data: /usr/share/elasticsearch/data
    network.host: 0.0.0.0
    discovery.seed_hosts: ["elasticsearch-0.elasticsearch-headless.monitoring.svc.cluster.local","elasticsearch-1.elasticsearch-headless.monitoring.svc.cluster.local","elasticsearch-2.elasticsearch-headless.monitoring.svc.cluster.local"]
    cluster.initial_master_nodes: ["elasticsearch-0","elasticsearch-1","elasticsearch-2"]
    http.port: 9200
    action.auto_create_index: .monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*
    xpack.monitoring.collection.enabled: true
    xpack.monitoring.history.duration: 7d
    bootstrap.memory_lock: true
    indices.fielddata.cache.size: 25%
    indices.queries.cache.size: 25%
    indices.memory.index_buffer_size: 30%
    # Reduce shard count for non-production environments
    # Use more shards in production for better performance
    index.number_of_shards: 3
    index.number_of_replicas: 1
    # Optimize for logging use case
    indices.lifecycle.name: maily
    action.destructive_requires_name: true

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: monitoring
  labels:
    app: elasticsearch
spec:
  selector:
    app: elasticsearch
  ports:
    - port: 9200
      name: http
    - port: 9300
      name: transport
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
  namespace: monitoring
  labels:
    app: elasticsearch
spec:
  clusterIP: None
  selector:
    app: elasticsearch
  ports:
    - port: 9200
      name: http
    - port: 9300
      name: transport

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: monitoring
spec:
  serviceName: elasticsearch-headless
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9114"
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: sysctl
          image: busybox:1.32.0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144 && ulimit -n 65536']
          securityContext:
            privileged: true
        - name: fix-permissions
          image: busybox:1.32.0
          command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 2Gi
          env:
            - name: ES_JAVA_OPTS
              value: -Xms2g -Xmx2g
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-credentials
                  key: password
            - name: xpack.security.enabled
              value: "true"
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: transport
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
            - name: elasticsearch-config
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
          readinessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 20
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
        - name: elasticsearch-exporter
          image: justwatch/elasticsearch_exporter:1.1.0
          args:
            - --es.uri=http://localhost:9200
            - --es.all
            - --es.indices
            - --web.listen-address=:9114
          ports:
            - containerPort: 9114
              name: metrics
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: elasticsearch-config
          configMap:
            name: elasticsearch-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gp2
        resources:
          requests:
            storage: 50Gi
