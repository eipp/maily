apiVersion: v1
kind: ServiceAccount
metadata:
  name: maily-app
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: default
spec:
  selector:
    app: vault
  ports:
  - port: 8200
    targetPort: 8200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-client
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-client
  template:
    metadata:
      labels:
        app: vault-client
    spec:
      serviceAccountName: maily-app
      containers:
      - name: vault-client
        image: hashicorp/vault:1.15.2
        command: ["sh", "-c", "while true; do sleep 3600; done"]
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: maily-app-config
  namespace: default
data:
  config.json: |
    {
      "database": {
        "host": "db.default.svc.cluster.local",
        "port": "5432",
        "name": "maily",
        "user": "vault:secret/data/maily/database#username",
        "password": "vault:secret/data/maily/database#password"
      },
      "redis": {
        "host": "redis.default.svc.cluster.local",
        "port": "6379",
        "password": "vault:secret/data/maily/redis#password"
      },
      "api": {
        "secret_key": "vault:secret/data/maily/api#secret_key",
        "jwt_secret": "vault:secret/data/maily/api#jwt_secret"
      },
      "smtp": {
        "host": "smtp.example.com",
        "port": "587",
        "username": "vault:secret/data/maily/smtp#username",
        "password": "vault:secret/data/maily/smtp#password"
      },
      "ai": {
        "openai_api_key": "vault:secret/data/maily/ai#openai_api_key",
        "anthropic_api_key": "vault:secret/data/maily/ai#anthropic_api_key"
      }
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: vault-setup
  namespace: default
spec:
  template:
    spec:
      serviceAccountName: maily-app
      containers:
      - name: vault-setup
        image: hashicorp/vault:1.15.2
        command:
        - sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status; do
            echo "Waiting for Vault to be ready..."
            sleep 5
          done

          # Set up secrets
          vault kv put secret/maily/database \
            username="maily_user" \
            password="$(openssl rand -base64 32)"

          vault kv put secret/maily/redis \
            password="$(openssl rand -base64 32)"

          vault kv put secret/maily/api \
            secret_key="$(openssl rand -base64 32)" \
            jwt_secret="$(openssl rand -base64 32)"

          vault kv put secret/maily/smtp \
            username="smtp_user" \
            password="$(openssl rand -base64 32)"

          vault kv put secret/maily/ai \
            openai_api_key="sk-example" \
            anthropic_api_key="sk-ant-example"

          echo "Vault setup complete!"
        env:
        - name: VAULT_ADDR
          value: "http://vault:8200"
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: vault-token
              key: token
      restartPolicy: OnFailure
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: default
type: Opaque
data:
  token: "{{ PAGERDUTY_SERVICE_KEY }}"  # Replace with actual Vault token (base64 encoded)
