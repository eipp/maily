version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: docker/services/api.Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/maily
      - REDIS_URL=redis://redis:6379/0
      - AI_SERVICE_URL=http://ai-service:8080
    depends_on:
      - db
      - redis
      - ai-service
    volumes:
      - ./apps/api:/app:ro
    networks:
      - maily-network

  web:
    build:
      context: .
      dockerfile: docker/services/web.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000
    depends_on:
      - api
    networks:
      - maily-network

  ai-service:
    build:
      context: .
      dockerfile: docker/services/ai-service.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - redis
    networks:
      - maily-network

  email-service:
    build:
      context: .
      dockerfile: docker/services/email-service.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - API_URL=http://api:8000
      - REDIS_URL=redis://redis:6379/2
    depends_on:
      - api
      - redis
    networks:
      - maily-network

  workers:
    build:
      context: .
      dockerfile: docker/services/workers.Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/maily
      - REDIS_URL=redis://redis:6379/3
    depends_on:
      - db
      - redis
    networks:
      - maily-network

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=maily
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - maily-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - maily-network

networks:
  maily-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
