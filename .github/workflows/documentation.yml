name: Documentation

on:
  # Run on code changes
  push:
    branches: [main, develop]
    paths:
      - 'docs/**'
      - 'scripts/generate-api-docs.js'
      - 'scripts/generate-inline-docs.js'
      - 'scripts/adr.js'
      - 'scripts/docs-automation.js'
      - 'openapi.json'
      - 'mkdocs.yml'
      - '.github/workflows/documentation.yml'

  # Run on pull requests to these branches
  pull_request:
    branches: [main, develop]
    paths:
      - 'docs/**'
      - 'scripts/generate-api-docs.js'
      - 'scripts/generate-inline-docs.js'
      - 'scripts/adr.js'
      - 'scripts/docs-automation.js'
      - 'openapi.json'
      - 'mkdocs.yml'
      - '.github/workflows/documentation.yml'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      regenerate:
        description: 'Regenerate all documentation'
        required: false
        type: boolean
        default: true

  # Run on a schedule (weekly)
  schedule:
    # Run every Monday at 2:00 UTC
    - cron: '0 2 * * 1'

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material pydoc-markdown pymdown-extensions

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Make scripts executable
        run: |
          chmod +x scripts/generate-api-docs.js
          chmod +x scripts/generate-inline-docs.js
          chmod +x scripts/adr.js
          chmod +x scripts/docs-automation.js

      - name: Generate documentation
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.regenerate == true || github.event_name == 'schedule' }}
        run: node scripts/docs-automation.js

      - name: Validate documentation
        if: ${{ github.event_name != 'workflow_dispatch' || inputs.regenerate != true }}
        run: node scripts/docs-automation.js --validate-only

      - name: Upload validation report
        uses: actions/upload-artifact@v3
        with:
          name: documentation-validation-report
          path: docs-validation-report.json

      - name: Build documentation site
        run: mkdocs build

      - name: Upload documentation site
        uses: actions/upload-artifact@v3
        with:
          name: documentation-site
          path: site/

  deploy-docs:
    name: Deploy Documentation
    needs: build-docs
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install MkDocs
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Download documentation site
        uses: actions/download-artifact@v3
        with:
          name: documentation-site
          path: site

      - name: Deploy to GitHub Pages
        run: |
          mkdocs gh-deploy --force --site-dir site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
