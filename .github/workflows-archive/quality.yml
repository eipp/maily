name: Quality Checks

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: maily_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r apps/api/requirements.txt
          pip install -r apps/ai-service/requirements-ai-mesh.txt
          pip install pytest-cov codecov

      - name: Run JavaScript tests with coverage
        run: npm run test:coverage

      - name: Run Python tests with coverage
        run: |
          cd apps/api
          pytest --cov=. --cov-report=xml:../../coverage-python-api.xml
          cd ../..
          cd apps/ai-service
          pytest --cov=. --cov-report=xml:../../coverage-python-ai.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true

      - name: Check coverage thresholds
        run: |
          npx nyc check-coverage --lines 80 --functions 80 --branches 70

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Check for duplicate dependencies
        run: npx depcheck

      - name: Check for npm audit issues
        run: npm audit --audit-level=high

      - name: Check Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety
          safety check -r requirements.txt

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app with bundle analyzer
        run: |
          cd apps/web
          ANALYZE=true npm run build

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: apps/web/.next/analyze
          retention-days: 7

  a11y-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: |
          cd apps/web
          npm run build

      - name: Run accessibility checks
        run: |
          npm install -g pa11y-ci
          pa11y-ci --config .pa11yci.json